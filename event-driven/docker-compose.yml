
version: "3.2"

##------------##     
##  Networks  ##
##------------##
networks:

  # Rede de Workers
  net-worker:
    ipam:
      driver: default
      config:
        - subnet: "10.10.10.0/24"
          gateway: 10.10.10.254

##------------##     
##  Services  ##
##------------##
services:

# docker run -d --name broker -p 5672:5672 -p 15672:15672 -e RABBITMQ_DEFAULT_USER=owl -e RABBITMQ_DEFAULT_PASS=owl rabbitmq:3-management-alpine

  rabbitmq:
    build: 
      context: .
      dockerfile: rabbitmq/Dockerfile.rabbitmq
    image: rabbitmq:events_messanger
    container_name: 'events_messanger'
#    environment:
     #RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
     #RABBITMQ_DEFAULT_USER: "owl"
     #RABBITMQ_DEFAULT_PASS: "owl"
#      CELERY_BROKER_URL: "amqp://owl:owl@10.10.10.1:5672"
    # Restrição de acesso  
    user: nobody  
    ports:
      - "5672:5672"
      - "15672:15672"
#    volumes: 
#      - ./vols/rabbitmq/data/:/var/lib/rabbitmq/
#      - ./vols/rabbitmq/log/:/var/log/rabbitmq
    networks:
      net-worker:
        ipv4_address: 10.10.10.1

#  broker:
#    build: 
#      context: .
#      dockerfile: Dockerfile.rabbitmq
#   entrypoint: rabbitmq-server
#   command: -detached
#    container_name: 'events_messanger'
#    image: rabbitmq:events_messanger
#    environment:
#      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
#      RABBITMQ_DEFAULT_USER: "owl"
#      RABBITMQ_DEFAULT_PASS: "owl"
#      #CELERY_BROKER_URL: "amqp://owl:owl@10.10.10.1:5672"
#    # Restrição de acesso  
#    #user: nobody 
#    # Restrição de acesso (nobody não funciona no flower) 
    #user: user
#    ports:
#      - "5672:5672"
#      - "15672:15672"
##    volumes: 
##      - ./vols/rabbitmq/data/:/var/lib/rabbitmq/
##      - ./vols/rabbitmq/log/:/var/log/rabbitmq
#    networks:
#      net-worker:
#        ipv4_address: 10.10.10.1



#  redis: 
#    image: redis:alpine 
#    container_name: 'redis'
#    ports: 
#      - "6379:6379"
#    networks:
#      net-worker:
#        ipv4_address: 10.10.10.2        

  postman:
    build: 
      context: .
      dockerfile: postman/Dockerfile.postman
    entrypoint: python
    command: ./postman.py  
    container_name: 'events_dispatcher'
    image: postman:events_dispatcher
    environment:
      - BROKER_URL=amqp://owl:owl@10.10.10.1:5672
      - CELERY_DEFAULT_QUEUE="default"
      - CELERY_DEFAULT_EXCHANGE="default"
      - CELERY_DEFAULT_EXCHANGE_TYPE="direct"
      - CELERY_DEFAULT_ROUTING_KEY="default"
    # Restrição de acesso  
    # user: nobody
    ports:
      - 8000:8000      
    depends_on:
      - rabbitmq 
    networks:
      net-worker:
        ipv4_address: 10.10.10.3 


#  worker:
#    build: ./
#    entrypoint: celery
#    command: -A tasks worker -l info -E
#   user: nobody
#   volumes:
#      - ./examples:/data

#  prometheus:
#    image: prom/prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - 9090:9090

#  grafana:
#    image: grafana/grafana
#    depends_on:
#      - prometheus
#    ports:
#      - 3000:3000

  flower:
    build: 
      context: .
      dockerfile: flower/Dockerfile.flower
    entrypoint: celery
    command: flower
    container_name: 'events_monitor'
    image: flower:events_monitor
    environment:
      # https://github.com/sirodoht/opencult.com/issues/43
      # Atenção para não colocar " nessas variáveis
      - CELERY_BROKER_URL=amqp://owl:owl@10.10.10.1
      - FLOWER_PORT=5566
    # Restrição de acesso (nobody não funciona no flower) 
    user: user
    ports:
      - 5566:5566
    depends_on:
      - rabbitmq 
    networks:
      net-worker:
        ipv4_address: 10.10.10.4

#  flower:
#    image: mher/flower:0.9.7
#    container_name: 'flower'
#    environment:
#      - CELERY_BROKER_URL=amqp://owl:owl@10.10.10.1
#      #- CELERY_BROKER_URL=amqp://owl:owl@broker
#     - FLOWER_PORT=8888
#    ports:
#      - 8889:8888
#    depends_on:
#      - rabbitmq 
#    networks:
#      net-worker:
#        ipv4_address: 10.10.10.4


  celery_1:
    build: 
      context: .
      dockerfile: celery/Dockerfile.celery
#   entrypoint: celery
#   command: -A tasks worker -l info -E       
    container_name: 'services_domain_a'
    image: celery:services_domain
    hostname: A
    environment:
      - BROKER_URL=amqp://owl:owl@10.10.10.1:5672
#     - RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=true
#    volumes:
#      - ./vol:/app
    depends_on:
      - rabbitmq 
    networks:
      net-worker:
        ipv4_address: 10.10.10.5  

  celery_2:
    image: celery:services_domain
    container_name: 'services_domain_b'
    hostname: B
    environment:
      - BROKER_URL=amqp://owl:owl@10.10.10.1:5672
#     - RESULT_BACKEND=redis://10.10.10.2:6379
      - C_FORCE_ROOT=true
    depends_on:
      - rabbitmq 
    networks:
      net-worker:
        ipv4_address: 10.10.10.6

