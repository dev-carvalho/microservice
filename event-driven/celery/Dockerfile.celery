
# Inspiração
# Repositório Oficial: docker-library/celery
# https://github.com/docker-library/celery
#
# Ajustei o Dockerfile !!!
#
# https://www.blueshoe.io/blog/strategies-for-slim-docker-images
#

#FROM python:slim

#FROM python:3.12.0a7-bullseye
# Python 3.11.3
# pip 22.3.1
# celery 5.2.7 (dawn-chorus)

FROM python:alpine as base
# Python 3.11.3
# pip 22.3.1
# celery 5.2.7 (dawn-chorus)

# Setting para PYTHON
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Atualiza o sistema e o pip (pip 23.0.1 --> pip 23.1.2)
RUN apk update && pip  --no-cache-dir install -U setuptools pip

# Add a user with an explicit UID/GID and create necessary directories
RUN set -eux; \
    addgroup -g 1000 user; \
    adduser  -u 1000 -G user user -D; 

# Usuário Default  
USER user

# Diretório do usuário
WORKDIR /home/user

##---------------------------##
##  2a fase - REQUERIMENTOS  ##
##  COMPILAÇÃO E CONSTRUÇÃO  ##
##---------------------------##
FROM base as builder

# Lista dos requisitos minimos
COPY --chown=1000:1000 celery/requirements.celery /code/requirements.celery

# Instalando as dependencias para gerar um cache
RUN pip install --no-cache-dir --upgrade -r /code/requirements.celery

##--------------------##
##  3a fase - Final   ##
##  Aplicação Python  ##
##--------------------##
# Volta à instalação base
FROM builder as code

#COPY --chown=1000:1000 ./src/tasks.py .
COPY --chown=1000:1000 src/*.py .

COPY --chown=1000:1000 celery/docker-entrypoint.celery.sh .
RUN chmod gu+x ./docker-entrypoint.celery.sh

# link para o Message Broker (RabbitMQ)
#ENV CELERY_BROKER_URL "pyamqp://owl:owl@10.10.10.1:5672"

# Usuário Default
#USER user

# Setup the entrypoint, this ensures pyenv is initialized when a container is started
# and that any compiled files from earlier steps or from mounts are removed to avoid
# pytest failing with an ImportMismatchError
ENTRYPOINT [ "./docker-entrypoint.celery.sh" ] 

#CMD ["celery","-A","tasks","worker","--hostname","teste.%h","--loglevel=info","-Q","priority_queue"]
#CMD ["celery","-A","tasks","worker","--hostname","%h.worker_1","--loglevel=info","--autoscale","4,2","--max-memory-per-child","512000"]


