
# Running
# . ./setup




# docker build -t celery .
# docker run --name worker -d celery
# docker run -it worker  /bin/sh
#
# docker container run -itd --net celery_net-worker celery
#
# docker exec -it broker  sh -c "cat /etc/hostname; ls -la"
# docker exec -it worker  sh -c "/bin/bash"

# apt-get install -y iputils-ping

alias make="figlet 'make' | lolcat ; docker build -t celery . ; docker run --net celery_net-worker --name teste celery ; echo"
alias mk="docker build -t broker . ; docker run  --name broker -d broker"

# scripts
alias cls="cd /root/microservice/event-driven/scripts; ./cls.sh; cd -; echo"
alias test="cd /root/microservice/event-driven/scripts; ./test.sh; cd -; echo"


alias status="figlet 'status' | lolcat ; docker image ls ; echo ; docker container ls ; echo"
alias st="status"
#alias mk="make"

alias rsh="docker exec -it $1 sh -c "/bin/sh" ; echo"
alias lsi="figlet 'Images' | lolcat ; docker image ls ; echo"
alias lsc="figlet 'Containers' | lolcat ; docker container ls ; echo"
alias lsn="figlet 'Networks' | lolcat ; docker network ls ; echo"

my_func() {
  if [ $# -lt 2 ]
  then
    echo "Usage: $funcstack[1] <first-argument> <second-argument>"
    return
  fi

  echo "First argument: $1"
  echo "Second argument: $2"
}


#cls() {
#  echo "CLS"
#  figlet "Containers" | lolcat 
# docker container rm -f $(docker container ls -qa)
# figlet "Images" | lolcat 
# docker image     rm -f $(docker image ls -qa)
# figlet "Networks" | lolcat 
#  docker network   rm -f $(docker network ls)
#  echo
#  return
#}

